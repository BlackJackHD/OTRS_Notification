import psycopg2
from requests import get
import time
import re
import base64
import config
import telebot
from telebot import types
from threading import Thread

#—á—Ç–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞
def file_r(name):
	my_file = open(str(name))
	z = my_file.read()
	my_file.close()
	return(z)
#–∑–∞–ø–∏—Å—å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ id —Ç–∏–∫–µ—Ç–∞ –≤ —Ñ–∞–π–ª
def file_w(name, z):
		my_file = open(name, 'w+')
		z = str(z)
		my_file.write(z)
		z = my_file.read()
		my_file.close()	
#–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def text_message(recipient,text):
	token = str('https://api.telegram.org/bot' + config.token + '/sendMessage')
	payload = {'chat_id': recipient, 'text': text}
	r = get(token, params=payload)
#—Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
def message_for_all(text):
	for x in config.recipient:
		text_message(x,text)
#—Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
def ermac(text):
	text = str("OTRSnoton - ") + text
	for x in config.ermac_recipient:
		token = str('https://api.telegram.org/bot' + config.ermac_token + '/sendMessage')
		payload = {'chat_id': x, 'text': text}
		r = get(token, params=payload)
#–¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ html-—Ç–µ–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π –≤–∏–¥
def html_decode(text):
	text = base64.b64decode(text)
	text = text.decode('utf-8')
	text = re.sub("&#(\d+);", lambda match: chr(int(match.group(1))), text)
	text = re.sub(r'<br>', '\n', text)
	text = re.sub(r'&nbsp;', ' ', text)
	text = re.sub(r'\<[^<>]*\>', '', text)
	return(text)
#sql-–∑–∞–ø—Ä–æ—Å —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
def psql_req(req):
	try:
		connection = psycopg2.connect(dbname=config.dbname,user=config.user, password=config.password,host=config.host, port=config.port)
		req = str(req)
		cursor = connection.cursor()
		cursor.execute(req)
		record = cursor.fetchall()
		return(record)
	except Exception as ex:
		ermac(ex)
		return(None)
#—Ü–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –∑–∞—è–≤–æ–∫  –ø–æ ID
	#üî¥ - 1 - –æ—Ç–∫—Ä—ã—Ç–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
	#üü° - 2 - –æ—Ç–∫—Ä—ã—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞
	#üü¢ - 3 - –∑–∞–∫—Ä—ã—Ç–∞
	#üîµ - 9 - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞
	#‚ö´ - –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ
def bounce(id):
	record_bounce = psql_req("SELECT ticket_lock_id,ticket_state_id FROM ticket WHERE id = " + str(id) + ";")
	if record_bounce[0][1] == 3 or record_bounce[0][1] == 2:
		return("üü¢")
	elif record_bounce[0][1] == 9:
		return("üîµ")
	elif record_bounce[0][0] == 1:
		return("üî¥")
	elif record_bounce[0][0] == 2:
		return("üü°")
	else:
		return("‚ö´")
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–æ–≤—ã—Ö id –∏ article_id –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —Å —É—á—ë—Ç–æ–º —Å—Ç–∞—Ç—É—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è 
def notification():
	try:
		last_ticket_id = str(file_r('lti.txt'))
		# time.sleep(1)
		last_article_id = str(file_r('lai.txt'))
		record_article_id = psql_req("SELECT id,ticket_id FROM article WHERE id > " + last_article_id + " ORDER BY id;")
		if len(record_article_id) > 0:
			j = 0
			while j < len(record_article_id):
				record_title = psql_req("SELECT id,tn,title,customer_user_id,create_time FROM ticket WHERE id = " + str(record_article_id[j][1]) + ";")
				time.sleep(1)
				record_body = psql_req("SELECT content_type,content,article_id FROM article_data_mime_attachment WHERE article_id=" + str(record_article_id[j][0]) + ";")
				time.sleep(1)
				try:						
					if record_body[0][0][0:5] == "text/":
						if record_article_id[j][1] > int(last_ticket_id):
							message_for_all(str(bounce(record_title[0][0])) + "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\nID - " + str(record_title[0][0]) + "\n–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ - " + str(record_title[0][1]) + "\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã - " + str(record_title[0][2]) + "\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å - " + str(record_title[0][3]) + "\n–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è - " + str(record_title[0][4]) + "\n---\n" + html_decode(record_body[0][1]))
							time.sleep(1)
							file_w('lti.txt', record_title[0][0])
							file_w('lai.txt', record_body[0][2])
						else:
							message_for_all(str(bounce(record_title[0][0])) + "–î–æ–±–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –∫ –∑–∞—è–≤–∫–µ:\n\nID –∑–∞—è–≤–∫–∏: " + str(record_title[0][0]) + "\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã:" + str(record_title[0][2]) + "\n---\n" + html_decode(record_body[0][1]))
							time.sleep(1)
							file_w('lai.txt', record_body[0][2])
					else:
						file_w('lai.txt', record_body[0][2])
				except:
					message_for_all(str(bounce(record_title[0][0])) + "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\nID - " + str(record_title[0][0]) + "\n–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏ - " + str(record_title[0][1]) + "\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã - " + str(record_title[0][2]) + "\n–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å - " + str(record_title[0][3]) + "\n–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è - " + str(record_title[0][4]))
					# time.sleep(1)
					file_w('lti.txt', record_title[0][0])
					file_w('lai.txt', record_article_id[0][0])
				j+=1
			file_w('lai.txt', record_article_id[0][0])
	except Exception as ex:
		ermac(ex)
	time.sleep(10)

z = 0
while z == 0:
  try:
  	print('hui')
  	notification()
  	print('end')
  	time.sleep(5)
  except:
  	print('Vse upalo')
  	time.sleep(5)